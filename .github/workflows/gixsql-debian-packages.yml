name: gixsql-debian-packages

on:
  workflow_dispatch
  
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

env:
  GIXSQLMAJ: 1
  GIXSQLMIN: 0
  GIXSQLREL: 21dev
  GIX_REVISION: ${{ github.run_attempt }}
  GIXSQL_BRANCH: ${{ github.ref_name }}
  INSTALL_PREFIX: usr
  HOST_PLATFORM: x64

permissions:
  contents: read

jobs:

  debian-10-x64:
    runs-on: ubuntu-latest
    container:
      image: debian:10

    steps:
    
    - name: Build
      env:
        DIST: debian-10
      run: |
        export WORKSPACE=$(pwd)
        export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        apt update
        apt install -y build-essential automake autoconf pkg-config libmariadb-dev-compat libmariadb-dev libpq-dev unixodbc-dev flex libspdlog-dev libfmt-dev git wget
        git clone --recurse-submodules https://github.com/alexbodn/gixsql.git --branch ${{ env.GIXSQL_BRANCH }} .
        echo "HOST_PLATFORM      : ${{env.HOST_PLATFORM}}"
        echo "BUILD_CONFIGURATION: ${{env.BUILD_CONFIGURATION}}"
        wget http://ftp.debian.org/debian/pool/main/b/bison/bison_3.7.5+dfsg-1_amd64.deb
        dpkg -i bison_3.7.5+dfsg-1_amd64.deb
        chmod 755 ./prepbuild.sh && ./prepbuild.sh /E
        chmod 755 ./prepdist.sh && ./prepdist.sh
        autoreconf --install --force
        ./configure --prefix=$WORKSPACE/pkg/${{ env.INSTALL_PREFIX }}
        make -j$(nproc) && make install-strip
        chmod 755 ./deploy/installers/linux/mkdeb-gixsql.sh && ./deploy/installers/linux/mkdeb-gixsql.sh
    
#    - name: Build package
#      env:
#          DIST: debian-10
#
#      shell: bash
#      run: |
#        chmod 755 $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh && $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh
#        ls -l
#        ls -lR $WORKSPACE/pkg
        
    - name: Archive production artifacts
      env:
          DIST: debian-10 
      uses: actions/upload-artifact@v3
      with:
        name: gixsql-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXSQLMAJ}}.${{ env.GIXSQLMIN}}.${{ env.GIXSQLREL}}-${{ env.GIX_REVISION}}
        path: |
          gixsql-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXSQLMAJ}}.${{ env.GIXSQLMIN}}.${{ env.GIXSQLREL}}-${{ env.GIX_REVISION}}.deb


  debian-11-x64:
    runs-on: ubuntu-latest
    container:
      image: debian:11

    steps:
    
    - name: Build
      env:
        DIST: debian-11
      run: |
        export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        export WORKSPACE=$(pwd)
        apt update
        apt install -y build-essential bison automake autoconf pkg-config libmariadb-dev-compat libmariadb-dev libpq-dev unixodbc-dev flex libspdlog-dev libfmt-dev git wget
        git clone --recurse-submodules https://github.com/alexbodn/gixsql.git --branch ${{ env.GIXSQL_BRANCH }} .
        echo "HOST_PLATFORM      : ${{env.HOST_PLATFORM}}"
        echo "BUILD_CONFIGURATION: ${{env.BUILD_CONFIGURATION}}"
        wget http://ftp.debian.org/debian/pool/main/b/bison/bison_3.7.5+dfsg-1_amd64.deb
        dpkg -i bison_3.7.5+dfsg-1_amd64.deb
        chmod 755 ./prepbuild.sh && ./prepbuild.sh /E
        chmod 755 ./prepdist.sh && ./prepdist.sh
        autoreconf --install --force
        ./configure --prefix=$WORKSPACE/pkg/${{ env.INSTALL_PREFIX }}
        make -j$(nproc) && make install-strip
        chmod 755 $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh && $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh
    
#    - name: Build package
#      env:
#          DIST: debian-11
#          WORKSPACE: ${{ github.workspace }}
#      shell: bash
#      run: |
#        chmod 755 $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh && $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh
#        ls -l
#        ls -lR $WORKSPACE/pkg
        
    - name: Archive production artifacts
      env:
          DIST: debian-11
      uses: actions/upload-artifact@v3
      with:
        name: gixsql-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXSQLMAJ}}.${{ env.GIXSQLMIN}}.${{ env.GIXSQLREL}}-${{ env.GIX_REVISION}}
        path: |
          gixsql-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXSQLMAJ}}.${{ env.GIXSQLMIN}}.${{ env.GIXSQLREL}}-${{ env.GIX_REVISION}}.deb


  debian-12-x64:
    runs-on: ubuntu-latest
    container:
      image: debian:12

    steps:
    
    - name: Build
      env:
        DIST: debian-12
      run: |
        export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        export WORKSPACE=$(pwd)
        apt update
        apt install -y build-essential bison automake autoconf pkg-config libmariadb-dev-compat libmariadb-dev libpq-dev unixodbc-dev flex libspdlog-dev libfmt-dev git wget libtool
        git clone --recurse-submodules https://github.com/alexbodn/gixsql.git --branch ${{ env.GIXSQL_BRANCH }} .
        echo "HOST_PLATFORM      : ${{env.HOST_PLATFORM}}"
        echo "BUILD_CONFIGURATION: ${{env.BUILD_CONFIGURATION}}"
        chmod 755 ./prepbuild.sh && ./prepbuild.sh /E
        chmod 755 ./prepdist.sh && ./prepdist.sh
        autoreconf --install --force
        ./configure --prefix=$WORKSPACE/pkg/${{ env.INSTALL_PREFIX }}
        make -j$(nproc) && make install-strip
        chmod 755 $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh && $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh
    
#    - name: Build package
#      env:
#          DIST: debian-12
#          WORKSPACE: ${{ github.workspace }}
#      shell: bash
#      run: |
#        chmod 755 $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh && $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh
#        ls -l
#        ls -lR $WORKSPACE/pkg
        
    - name: Archive production artifacts
      env:
          DIST: debian-12
      uses: actions/upload-artifact@v3
      with:
        name: gixsql-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXSQLMAJ}}.${{ env.GIXSQLMIN}}.${{ env.GIXSQLREL}}-${{ env.GIX_REVISION}}
        path: |
          gixsql-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXSQLMAJ}}.${{ env.GIXSQLMIN}}.${{ env.GIXSQLREL}}-${{ env.GIX_REVISION}}.deb

  debian-12-aarch64:
    runs-on: ubuntu-latest
    container:
      image: debian:12

    steps:
    
    - name: Build
      env:
        DIST: debian-12
      run: |
        export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        export WORKSPACE=$(pwd)
        apt update
        apt install -y build-essential bison automake autoconf pkg-config libmariadb-dev-compat libmariadb-dev libpq-dev unixodbc-dev flex libspdlog-dev libfmt-dev git wget libtool
        git clone --recurse-submodules https://github.com/alexbodn/gixsql.git --branch ${{ env.GIXSQL_BRANCH }} .
        echo "HOST_PLATFORM      : ${{env.HOST_PLATFORM}}"
        echo "BUILD_CONFIGURATION: ${{env.BUILD_CONFIGURATION}}"
        chmod 755 ./prepbuild.sh && ./prepbuild.sh /E
        chmod 755 ./prepdist.sh && ./prepdist.sh
        autoreconf --install --force
        ./configure --prefix=$WORKSPACE/pkg/${{ env.INSTALL_PREFIX }}
        make -j$(nproc) && make install-strip
        chmod 755 $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh && $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh
    
#    - name: Build package
#      env:
#          DIST: debian-12
#          WORKSPACE: ${{ github.workspace }}
#      shell: bash
#      run: |
#        chmod 755 $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh && $WORKSPACE/deploy/installers/linux/mkdeb-gixsql.sh
#        ls -l
#        ls -lR $WORKSPACE/pkg
        
    - name: Archive production artifacts
      env:
          DIST: debian-12
      uses: actions/upload-artifact@v3
      with:
        name: gixsql-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXSQLMAJ}}.${{ env.GIXSQLMIN}}.${{ env.GIXSQLREL}}-${{ env.GIX_REVISION}}
        path: |
          gixsql-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXSQLMAJ}}.${{ env.GIXSQLMIN}}.${{ env.GIXSQLREL}}-${{ env.GIX_REVISION}}.deb




